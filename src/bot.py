import os
from datetime import datetime
from telegram import Update
from telegram.ext import Application, MessageHandler, CommandHandler, MessageReactionHandler, ContextTypes, filters
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
BOT_TOKEN = os.getenv('BOT_TOKEN')
ADMIN_ID = int(os.getenv('ADMIN_ID'))  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á–∏—Å–ª–æ

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∞—É–¥–∏–æ
AUDIO_FOLDER = "static/audio"
# –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
os.makedirs(AUDIO_FOLDER, exist_ok=True)

# –í –Ω–∞—á–∞–ª–µ —Ñ–∞–π–ª–∞ –¥–æ–±–∞–≤–∏–º –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥
print(f"ADMIN_ID type: {type(ADMIN_ID)}, value: {ADMIN_ID}")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–±–æ—Ä–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π. –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –¥–æ 10 —Å–µ–∫—É–Ω–¥."
    )

async def handle_voice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    voice = update.message.voice
    user = update.message.from_user
    
    print(f"–ü–æ–ª—É—á–µ–Ω–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ –æ—Ç: {user.first_name} (ID: {user.id})")
    print(f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {voice.duration} —Å–µ–∫—É–Ω–¥")
    
    if voice.duration > 10:
        await update.message.reply_text(
            "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –¥–ª–∏–Ω–Ω–µ–µ 10 —Å–µ–∫—É–Ω–¥!"
        )
        return
    
    try:
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        file = await context.bot.get_file(voice.file_id)
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        filename = f"{AUDIO_FOLDER}/voice_{timestamp}.ogg"
        await file.download_to_drive(filename)
        print(f"–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∫–∞–∫: {filename}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –∞–¥–º–∏–Ω—É –∫–∞–∫ –Ω–æ–≤–æ–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ
        if user.id != ADMIN_ID:
            print(f"–û—Ç–ø—Ä–∞–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É (ID: {ADMIN_ID})")
            # –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ file_id
            await context.bot.send_voice(
                chat_id=ADMIN_ID,
                voice=voice.file_id,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π file_id –≤–º–µ—Å—Ç–æ —Ñ–∞–π–ª–∞
                caption=f"–û—Ç: {user.first_name} (@{user.username})"
            )
            print("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        print(f"–¢–∏–ø –æ—à–∏–±–∫–∏: {type(e)}")
        print(f"File ID: {voice.file_id}")  # –î–æ–±–∞–≤–∏–º –≤—ã–≤–æ–¥ file_id –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.")
        return
    
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –í–∞—à–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ.")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user = update.message.from_user
    text = update.message.text
    
    print(f"–ü–æ–ª—É—á–µ–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ—Ç: {user.first_name} (ID: {user.id})")
    print(f"–¢–µ–∫—Å—Ç: {text}")
    
    try:
        if user.id != ADMIN_ID:
            print(f"–ü–µ—Ä–µ—Å—ã–ª–∞—é —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É (ID: {ADMIN_ID})")
            await context.bot.forward_message(
                chat_id=ADMIN_ID,
                from_chat_id=update.effective_chat.id,
                message_id=update.message.message_id
            )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Ç–µ–∫—Å—Ç–∞: {e}")
        print(f"–¢–∏–ø –æ—à–∏–±–∫–∏: {type(e)}")
    
    await update.message.reply_text("–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!")

async def handle_reaction(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–∞–∫—Ü–∏–π –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    try:
        reaction = update.message_reaction
        chat_id = reaction.chat.id
        message_id = reaction.message_id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –ª–∞–π–∫ üëç
        if "üëç" not in reaction.new_reaction:
            return
            
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏
        message = await context.bot.get_message(
            chat_id=chat_id,
            message_id=message_id
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if not hasattr(message, 'voice'):
            return
            
        # –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤
        likes_count = sum(1 for reaction in message.reactions if "üëç" in reaction.emoji)
        print(f"–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–∏–ª–æ –ª–∞–π–∫! –í—Å–µ–≥–æ –ª–∞–π–∫–æ–≤: {likes_count}")
        
        # –ï—Å–ª–∏ –Ω–∞–±—Ä–∞–ª–æ—Å—å 30 –ª–∞–π–∫–æ–≤
        if likes_count == 30:
            print("–ù–∞–±—Ä–∞–Ω–æ 30 –ª–∞–π–∫–æ–≤! –û—Ç–ø—Ä–∞–≤–ª—è—é –≥–æ–ª–æ—Å–æ–≤–æ–µ –∞–¥–º–∏–Ω—É...")
            # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
            await context.bot.forward_message(
                chat_id=ADMIN_ID,
                from_chat_id=chat_id,
                message_id=message_id
            )
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ–∞–∫—Ü–∏–∏: {e}")

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ —Ä–µ–∞–∫—Ü–∏—è—Ö
    application = (
        Application.builder()
        .token(BOT_TOKEN)
        .arbitrary_callback_data(True)
        .get_updates_http_version("1.1")
        .http_version("1.1")
        .build()
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.VOICE, handle_voice))
    application.add_handler(MessageReactionHandler(handle_reaction))
    
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    print("–û–∂–∏–¥–∞—é —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è...")
    application.run_polling(allowed_updates=["message", "message_reaction"])

if __name__ == '__main__':
    main()
